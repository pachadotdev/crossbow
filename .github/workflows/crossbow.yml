# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow

on:
  push:
    branches:
      - "*-github-*"

env:
  ARROW_S3: ON
  MACOSX_DEPLOYMENT_TARGET: 10.13
  PYARROW_BUILD_VERBOSE: 1
  PYARROW_VERSION: 3.1.0.dev402
  VCPKG_DEFAULT_TRIPLET: x64-osx-static-release
  VCPKG_FEATURE_FLAGS: "-manifests"
  VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}/arrow/ci/vcpkg

jobs:
  build:
    name: Build wheel for OS X
    runs-on: macos-latest
    steps:
      - name: Checkout Arrow
        run: |
          set -ex
          git clone --no-checkout https://github.com/kszucs/arrow arrow
          git -C arrow fetch -t https://github.com/kszucs/arrow mac-wheel-vcpkg
          git -C arrow checkout FETCH_HEAD
          git -C arrow submodule update --init --recursive

      - name: Install System Dependencies
        run: brew install bison ninja

      # Restore from cache the previously built ports.
      # If cache-miss, download and build vcpkg (aka "bootstrap vcpkg").
      - name: Restore from Cache and Install Vcpkg
        # Download and build vcpkg, without installing any port.
        # If content is cached already, it is a no-op.
        uses: kszucs/run-vcpkg@main
        with:
          # Required to prevent cache eviction on crossbow's main branch
          # where we build pre-build the vcpkg packages
          setupOnly: true
          doNotSaveCache: true
          appendedCacheKey: "-macos-10.13"
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          vcpkgGitCommitId: fced4bef1606260f110d74de1ae1975c2b9ac549

      - name: Patch Vcpkg Ports
        run: |
          cd $VCPKG_ROOT
          if ! git apply --reverse --check --ignore-whitespace ../arrow/ci/vcpkg/ports.patch; then
            git apply --ignore-whitespace ../arrow/ci/vcpkg/ports.patch
            echo "Patch successfully applied!"
          fi

      # Now that vcpkg is installed, it is being used to run with the desired arguments.
      - name: Install Vcpkg Dependencies
        run: |
          $VCPKG_ROOT/vcpkg install \
            abseil \
            boost-filesystem \
            brotli \
            bzip2 \
            c-ares \
            curl \
            flatbuffers \
            gflags \
            glog \
            grpc \
            lz4 \
            openssl \
            orc \
            protobuf \
            rapidjson \
            re2 \
            snappy \
            thrift \
            utf8proc \
            zlib \
            zstd

      
      - name: Install AWS SDK C++
        run: |
          $VCPKG_ROOT/vcpkg install \
            aws-sdk-cpp[config,cognito-identity,core,identity-management,s3,sts,transfer]
      

      - name: Setup Multibuild
        env:
          PLAT: x86_64
          CONFIG_PATH: /dev/null
          MB_PYTHON_VERSION: 3.6
        run: |
          git clone https://github.com/matthew-brett/multibuild
          git -C multibuild checkout 8882150df6529658700b66bec124dfb77eefca26

      - name: Configure Environment and Install Python
        run: |
          source multibuild/common_utils.sh
          source multibuild/travis_osx_steps.sh
          before_install

      - name: Install Python Dependencies
        run: pip install -r arrow/python/requirements-wheel-build.txt

      - name: Build Wheel
        run: arrow/ci/scripts/python_wheel_macos_build.sh $(pwd)/arrow $(pwd)/build

        # provided by travis_osx_steps
        # before_install

        # # test the built wheels, move Homebrew directory to ensure things
        # # are properly statically-linked
        # CELLAR=$(brew --cellar)
        # sudo mv $CELLAR{,.bak}

        # # make a new Cellar, allowing numpy to dynamically link to openblas
        # sudo mkdir $CELLAR
        # sudo ln -s ../Cellar.bak/openblas $CELLAR/openblas
        # # and brew's openblas will need gcc
        # sudo ln -s ../Cellar.bak/gcc $CELLAR/gcc

        # # install the built wheel and test dependencies (osx-build.sh)
        # install_wheel arrow

        # # run unit tests before removing the system libraries (osx-build.sh)
        # ulimit -S -n 4096 && run_unit_tests arrow

        # # run the import tests (osx-build.sh)
        # run_import_tests

        # # restore the original Cellar
        # sudo rm $CELLAR/{gcc,openblas}
        # sudo rmdir $CELLAR
        # sudo mv $CELLAR{.bak,}

      - name: Setup Crossbow
        run: pip3 install --requirement arrow/dev/tasks/requirements-crossbow.txt

      - name: Upload artifacts
        run: |
          python3 arrow/dev/tasks/crossbow.py \
            --queue-path $(pwd) \
            --queue-remote https://github.com/ursacomputing/crossbow.git \
            upload-artifacts \
            --sha build-108-github-wheel-osx-high-sierra-cp36m \
            --tag build-108-github-wheel-osx-high-sierra-cp36m \
            --pattern "arrow/python/dist/*.whl"
        env:
          CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN }}

      